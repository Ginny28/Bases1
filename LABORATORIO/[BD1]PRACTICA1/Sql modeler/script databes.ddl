-- Generado por Oracle SQL Developer Data Modeler 4.1.1.888
--   en:        2015-09-07 23:44:04 CST
--   sitio:      Oracle Database 11g
--   tipo:      Oracle Database 11g




CREATE
  TABLE CENTRO_COSTOS
  (
    Id          INTEGER NOT NULL ,
    Nombre      VARCHAR2 (50) ,
    Presupuesto INTEGER
  ) ;
ALTER TABLE CENTRO_COSTOS ADD CONSTRAINT CENTRO_COSTOS_PK PRIMARY KEY ( Id ) ;


CREATE
  TABLE COTIZACION
  (
    Id                     INTEGER NOT NULL ,
    SOLICITUD_No_solicitud INTEGER NOT NULL ,
    PROVEEDOR_Id           INTEGER NOT NULL
  ) ;
ALTER TABLE COTIZACION ADD CONSTRAINT COTIZACION_PK PRIMARY KEY ( Id ) ;


CREATE
  TABLE DET_FACT
  (
    Cantidad           INTEGER ,
    FACTURA_No_factura INTEGER NOT NULL ,
    ITEM_Id            INTEGER NOT NULL
  ) ;


CREATE
  TABLE DET_ITEM_ENTREGADO
  (
    Cantidad         INTEGER NOT NULL ,
    SALIDA_No_salida VARCHAR2 (50) NOT NULL ,
    ITEM_Id          INTEGER NOT NULL
  ) ;
ALTER TABLE DET_ITEM_ENTREGADO ADD CONSTRAINT DET_ITEM_ENTREGADO_PK PRIMARY KEY
( Cantidad ) ;


CREATE
  TABLE DET_ITEM_REC
  (
    Cantidad           INTEGER ,
    ENTRADA_No_entrada INTEGER NOT NULL ,
    ITEM_Id            INTEGER NOT NULL
  ) ;


CREATE
  TABLE DET_ORDEN
  (
    cantidad_solicitada INTEGER ,
    Cantidad_despachada INTEGER ,
    Unidad_medida       VARCHAR2 (50) ,
    Total               INTEGER ,
    ORDEN_No_orden      INTEGER NOT NULL ,
    ITEM_Id             INTEGER NOT NULL
  ) ;


CREATE
  TABLE DET_SOLICITUD
  (
    Cantidad INTEGER ,
    "Unidad de medida" UNKNOWN
    --  ERROR: Datatype UNKNOWN is not allowed
    ,
    SOLICITUD_No_solicitud INTEGER NOT NULL ,
    ITEM_Id                INTEGER NOT NULL
  ) ;


CREATE
  TABLE EMPLEADO
  (
    Id       INTEGER NOT NULL ,
    Nombre   VARCHAR2 (50) ,
    Posicion VARCHAR2 (50)
  ) ;
ALTER TABLE EMPLEADO ADD CONSTRAINT ENCARGADO_PK PRIMARY KEY ( Id ) ;


CREATE
  TABLE ENTRADA
  (
    No_entrada         INTEGER NOT NULL ,
    Fecha              DATE ,
    Total_bienes       INTEGER ,
    Valor_total        INTEGER ,
    PROVEEDOR_Id       INTEGER NOT NULL ,
    FACTURA_No_factura INTEGER NOT NULL
  ) ;
ALTER TABLE ENTRADA ADD CONSTRAINT ENTRADA_PK PRIMARY KEY ( No_entrada ) ;


CREATE
  TABLE FACTURA
  (
    No_factura   INTEGER NOT NULL ,
    Fecha        DATE ,
    Total        INTEGER NOT NULL ,
    PROVEEDOR_Id INTEGER NOT NULL
  ) ;
ALTER TABLE FACTURA ADD CONSTRAINT FACTURA_PK PRIMARY KEY ( No_factura ) ;


CREATE
  TABLE ITEM
  (
    Id         INTEGER NOT NULL ,
    Nombre     VARCHAR2 (50) ,
    Tipo       VARCHAR2 (50) ,
    Valor_unit INTEGER
  ) ;
ALTER TABLE ITEM ADD CONSTRAINT ITEM_PK PRIMARY KEY ( Id ) ;


CREATE
  TABLE ORDEN
  (
    No_orden        INTEGER NOT NULL ,
    Fecha_solicitud DATE ,
    Fecha_entrega   DATE ,
    Monto_total     INTEGER
  ) ;
ALTER TABLE ORDEN ADD CONSTRAINT ORDEN_PK PRIMARY KEY ( No_orden ) ;


CREATE
  TABLE PROVEEDOR
  (
    Id     INTEGER NOT NULL ,
    Nombre VARCHAR2 (50)
  ) ;
ALTER TABLE PROVEEDOR ADD CONSTRAINT PROVEEDOR_PK PRIMARY KEY ( Id ) ;


CREATE
  TABLE SALIDA
  (
    No_salida     VARCHAR2 (50) NOT NULL ,
    Fecha_salida  DATE ,
    Fecha_entrega DATE ,
    Direccion     VARCHAR2 (75) ,
    EMPLEADO_Id   INTEGER NOT NULL
  ) ;
ALTER TABLE SALIDA ADD CONSTRAINT SALIDA_PK PRIMARY KEY ( No_salida ) ;


CREATE
  TABLE SOLICITUD
  (
    No_solicitud     INTEGER NOT NULL ,
    Fecha            DATE ,
    Total            INTEGER ,
    EMPLEADO_Id      INTEGER NOT NULL ,
    CENTRO_COSTOS_Id INTEGER NOT NULL
  ) ;
ALTER TABLE SOLICITUD ADD CONSTRAINT SOLICITUD_PK PRIMARY KEY ( No_solicitud )
;


ALTER TABLE COTIZACION ADD CONSTRAINT COTIZACION_PROVEEDOR_FK FOREIGN KEY (
PROVEEDOR_Id ) REFERENCES PROVEEDOR ( Id ) ;

ALTER TABLE COTIZACION ADD CONSTRAINT COTIZACION_SOLICITUD_FK FOREIGN KEY (
SOLICITUD_No_solicitud ) REFERENCES SOLICITUD ( No_solicitud ) ;

ALTER TABLE DET_FACT ADD CONSTRAINT DET_FACT_FACTURA_FK FOREIGN KEY (
FACTURA_No_factura ) REFERENCES FACTURA ( No_factura ) ;

ALTER TABLE DET_FACT ADD CONSTRAINT DET_FACT_ITEM_FK FOREIGN KEY ( ITEM_Id )
REFERENCES ITEM ( Id ) ;

ALTER TABLE DET_ITEM_ENTREGADO ADD CONSTRAINT DET_ITEM_ENTREGADO_ITEM_FK
FOREIGN KEY ( ITEM_Id ) REFERENCES ITEM ( Id ) ;

ALTER TABLE DET_ITEM_REC ADD CONSTRAINT DET_ITEM_REC_ENTRADA_FK FOREIGN KEY (
ENTRADA_No_entrada ) REFERENCES ENTRADA ( No_entrada ) ;

ALTER TABLE DET_ITEM_REC ADD CONSTRAINT DET_ITEM_REC_ITEM_FK FOREIGN KEY (
ITEM_Id ) REFERENCES ITEM ( Id ) ;

ALTER TABLE DET_ORDEN ADD CONSTRAINT DET_ORDEN_ITEM_FK FOREIGN KEY ( ITEM_Id )
REFERENCES ITEM ( Id ) ;

ALTER TABLE DET_ORDEN ADD CONSTRAINT DET_ORDEN_ORDEN_FK FOREIGN KEY (
ORDEN_No_orden ) REFERENCES ORDEN ( No_orden ) ;

ALTER TABLE DET_SOLICITUD ADD CONSTRAINT DET_SOLICITUD_ITEM_FK FOREIGN KEY (
ITEM_Id ) REFERENCES ITEM ( Id ) ;

ALTER TABLE DET_SOLICITUD ADD CONSTRAINT DET_SOLICITUD_SOLICITUD_FK FOREIGN KEY
( SOLICITUD_No_solicitud ) REFERENCES SOLICITUD ( No_solicitud ) ;

ALTER TABLE ENTRADA ADD CONSTRAINT ENTRADA_FACTURA_FK FOREIGN KEY (
FACTURA_No_factura ) REFERENCES FACTURA ( No_factura ) ;

ALTER TABLE ENTRADA ADD CONSTRAINT ENTRADA_PROVEEDOR_FK FOREIGN KEY (
PROVEEDOR_Id ) REFERENCES PROVEEDOR ( Id ) ;

ALTER TABLE FACTURA ADD CONSTRAINT FACTURA_PROVEEDOR_FK FOREIGN KEY (
PROVEEDOR_Id ) REFERENCES PROVEEDOR ( Id ) ;

ALTER TABLE SALIDA ADD CONSTRAINT SALIDA_EMPLEADO_FK FOREIGN KEY ( EMPLEADO_Id
) REFERENCES EMPLEADO ( Id ) ;

ALTER TABLE SOLICITUD ADD CONSTRAINT SOLICITUD_CENTRO_COSTOS_FK FOREIGN KEY (
CENTRO_COSTOS_Id ) REFERENCES CENTRO_COSTOS ( Id ) ;

ALTER TABLE SOLICITUD ADD CONSTRAINT SOLICITUD_EMPLEADO_FK FOREIGN KEY (
EMPLEADO_Id ) REFERENCES EMPLEADO ( Id ) ;

CREATE SEQUENCE CENTRO_COSTOS_Id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER CENTRO_COSTOS_Id_TRG BEFORE
  INSERT
    ON CENTRO_COSTOS FOR EACH ROW WHEN
    (
      NEW.Id IS NULL
    )
    BEGIN :NEW.Id := CENTRO_COSTOS_Id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE COTIZACION_Id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER COTIZACION_Id_TRG BEFORE
  INSERT
    ON COTIZACION FOR EACH ROW WHEN
    (
      NEW.Id IS NULL
    )
    BEGIN :NEW.Id := COTIZACION_Id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE EMPLEADO_Id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER EMPLEADO_Id_TRG BEFORE
  INSERT
    ON EMPLEADO FOR EACH ROW WHEN
    (
      NEW.Id IS NULL
    )
    BEGIN :NEW.Id := EMPLEADO_Id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE ENTRADA_No_entrada_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER ENTRADA_No_entrada_TRG BEFORE
  INSERT
    ON ENTRADA FOR EACH ROW WHEN
    (
      NEW.No_entrada IS NULL
    )
    BEGIN :NEW.No_entrada := ENTRADA_No_entrada_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE ITEM_Id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER ITEM_Id_TRG BEFORE
  INSERT
    ON ITEM FOR EACH ROW WHEN
    (
      NEW.Id IS NULL
    )
    BEGIN :NEW.Id := ITEM_Id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE ORDEN_No_orden_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER ORDEN_No_orden_TRG BEFORE
  INSERT
    ON ORDEN FOR EACH ROW WHEN
    (
      NEW.No_orden IS NULL
    )
    BEGIN :NEW.No_orden := ORDEN_No_orden_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE PROVEEDOR_Id_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER PROVEEDOR_Id_TRG BEFORE
  INSERT
    ON PROVEEDOR FOR EACH ROW WHEN
    (
      NEW.Id IS NULL
    )
    BEGIN :NEW.Id := PROVEEDOR_Id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE SALIDA_No_salida_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER SALIDA_No_salida_TRG BEFORE
  INSERT
    ON SALIDA FOR EACH ROW WHEN
    (
      NEW.No_salida IS NULL
    )
    BEGIN :NEW.No_salida := SALIDA_No_salida_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE SOLICITUD_No_solicitud_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER SOLICITUD_No_solicitud_TRG BEFORE
  INSERT
    ON SOLICITUD FOR EACH ROW WHEN
    (
      NEW.No_solicitud IS NULL
    )
    BEGIN :NEW.No_solicitud := SOLICITUD_No_solicitud_SEQ.NEXTVAL;
END;
/


-- Informe de Resumen de Oracle SQL Developer Data Modeler: 
-- 
-- CREATE TABLE                            15
-- CREATE INDEX                             0
-- ALTER TABLE                             28
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           9
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          9
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   1
-- WARNINGS                                 0
